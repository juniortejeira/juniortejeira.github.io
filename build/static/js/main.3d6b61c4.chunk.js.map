{"version":3,"sources":["serviceWorker.js","page/auth/notas-no-login.js","componentes/header/header.js","page/auth/login.js","componentes/footer/footer.js","page/home/home.js","componentes/tareas/TareaForm.js","componentes/tareas/Tarea.js","App.js","utils/PrivateRoutes.js","page/contacto/contacto.js","utils/router.js","index.js"],"names":["Boolean","window","location","hostname","match","NoLogin","className","to","Header","Login","props","navigate","useNavigate","onSubmit","e","preventDefault","onLogin","name","id","type","placeholder","href","Footer","Home","icon","faArrowDown","faCheck","faTrash","faPenSquare","TareaForm","useState","inputText","setInputText","validacion","setValidacion","event","trim","nuevaTarea","value","onChange","target","Tarea","modoEdit","setModoEdit","editText","setEditText","editar","tarea","echo","onClick","borrar","completado","Llamados","listaTareas","setListaTareas","nuevoArray","setNuevoArray","listaFiltrada","filter","index","actualizarTarea","listaActualizada","map","console","log","check","accionTerminada","listaIncompleta","indice","PrivateRoutes","Logeado","Contacto","required","Rutas","isLogged","setIsLogged","path","element","App","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3d6b61c4.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport './error404.css'\r\n\r\nfunction NoLogin() {\r\n  return (\r\n    <>\r\n      <div className=\"content-error\">\r\n          <h1 className=\"text-error\"><span className=\"error-mmm\">Mmm...</span> algo no salió bien</h1>\r\n          <p className=\"text-auth-error\">Debes estar autenticado para acceder a esta pagina</p>\r\n          <Link className=\"btn-error\" to=\"/login\">Presiona para autenticarte</Link>\r\n \r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NoLogin;","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './header.css'\r\n\r\nfunction Header() {\r\n  return (\r\n    <header>\r\n      <h1 className='titulo'>Formulario | Matea</h1>\r\n      <ul>\r\n        <Link className='menu-items' to=\"/\">Inicio</Link>\r\n        <Link className='menu-items' to=\"/tareas\">Tareas</Link>\r\n        <Link className='menu-items' to=\"/contacto\">Contactos</Link>\r\n        <Link className='menu-items' to=\"/login\">Login</Link>\r\n      </ul>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header","import React from \"react\"\r\nimport { useNavigate } from \"react-router\"\r\nimport \"./login.css\"\r\n\r\nfunction Login(props) {\r\n  const navigate = useNavigate() //\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    props.onLogin(true)\r\n    return navigate(\"/tareas\")\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n    \r\n        <h1 className=\"title-l\">Ingresar</h1>\r\n        <form\r\n          onSubmit={handleSubmit}\r\n          className=\"formulario\"\r\n          name=\"form\"\r\n          id=\"form\"\r\n        >\r\n          <input\r\n            id=\"input-email\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            className=\"input-l\"\r\n            placeholder=\"Usuario\"\r\n          ></input>\r\n          <input\r\n            id=\"input-pass\"\r\n            type=\"password\"\r\n            name=\"pass\"\r\n            className=\"input-l\"\r\n            placeholder=\"Contraseña\"\r\n          ></input>\r\n          <button className=\"btn-playlist\" type=\"submit\">\r\n            COMENZAR A CREAR TUS NOTAS\r\n          </button>\r\n          <a href=\"\" className=\"pass\">\r\n            ¿Has OLVIDADO LA CONTRASEÑA?\r\n          </a>\r\n\r\n          <div className=\"line-home\"></div>\r\n          <a href=\"\" className=\"acc\">\r\n            ¿NO TIENES CUENTA?\r\n          </a>\r\n          <a href=\"\" className=\"btn-reg\">\r\n            REGISTRATE\r\n          </a>\r\n        </form>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","import React from 'react'\r\nimport './footer.css'\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <>\r\n      <footer className='info'>\r\n          <div className='iconos-sociales-contenedor'> \r\n          <a className='icono-social'></a>\r\n            <a className='icono-social'></a>\r\n            <a className='icono-social'></a>\r\n            <a  className='icono-social'></a>\r\n          </div>\r\n          <ul className='menu-Footer'>\r\n            <li className='menu-item'>Legal</li>\r\n            <li className='menu-item'>Cookies</li>\r\n            <li className='menu-item'>Privacidad</li>\r\n            <li className='menu-item'>Contacto</li>\r\n          </ul>\r\n        <span className='text'>Junior Tejeira | Maximiliano Correa | Rodrigo Billarez | BootCamp Matea 2022 </span>\r\n      </footer>\r\n    </>\r\n  )\r\n}\r\n","import {\r\n  faArrowDown,\r\n  faCheck,\r\n  faPenSquare,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport React from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport \"../home/home.css\"\r\n\r\nexport default function Home() {\r\n  return (\r\n    <>\r\n      <main className=\"main-home\">\r\n        <h1 className=\"title-home\">Bienvenido tu pagina de tareas diarias</h1>\r\n        <div className=\"CTA\">\r\n          <h2 className=\"title-tareas\">Empieza a crear tareas</h2>\r\n          <FontAwesomeIcon className=\"arrow\" icon={faArrowDown} />\r\n          <Link className=\"link-tareas\" to={\"/tareas\"}>\r\n            Presione Aqui\r\n          </Link>\r\n        </div>\r\n        <div className=\"contenedor\">\r\n          <div className=\"contenedor-hijo\">\r\n            <h1>Crear Tareas</h1>\r\n            <FontAwesomeIcon className=\"arrow\" icon={faCheck} />\r\n            Lorem ipsum dolor sit, amet consectetur adipisicing elit.\r\n            Voluptates, cumque. Alias aliquam, culpa illo unde hic at impedit\r\n            iure dolorem quia doloribus neque in quaerat! Hic temporibus\r\n            sapiente similique ipsum.\r\n            <p> </p>\r\n          </div>\r\n          <div className=\"contenedor-hijo\">\r\n            <h1>Borrar Tareas</h1>\r\n            <FontAwesomeIcon className=\"arrow\" icon={faTrash} />\r\n            Lorem ipsum dolor sit, amet consectetur adipisicing elit.\r\n            Voluptates, cumque. Alias aliquam, culpa illo unde hic at impedit\r\n            iure dolorem quia doloribus neque in quaerat! Hic temporibus\r\n            sapiente similique ipsum.\r\n            <p> </p>\r\n          </div>\r\n          <div className=\"contenedor-hijo\">\r\n            <h1>Completar Tareas</h1>\r\n            <FontAwesomeIcon className=\"arrow\" icon={faCheck} />\r\n            Lorem ipsum dolor sit, amet consectetur adipisicing elit.\r\n            Voluptates, cumque. Alias aliquam, culpa illo unde hic at impedit\r\n            iure dolorem quia doloribus neque in quaerat! Hic temporibus\r\n            sapiente similique ipsum.\r\n            <p> </p>\r\n          </div>\r\n          <div className=\"contenedor-hijo\">\r\n            <h1>Cambiar Tareas</h1>\r\n            <FontAwesomeIcon className=\"arrow\" icon={faPenSquare} />\r\n            Lorem ipsum dolor sit, amet consectetur adipisicing elit.\r\n            Voluptates, cumque. Alias aliquam, culpa illo unde hic at impedit\r\n            iure dolorem quia doloribus neque in quaerat! Hic temporibus\r\n            sapiente similique ipsum.\r\n            <p> </p>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </>\r\n  )\r\n}\r\n","import React, { useState } from \"react\"\nimport \"./tareas.css\"\n\nconst TareaForm = (props) => {\n  const [inputText, setInputText] = useState(\"\")\n  const [validacion, setValidacion] = useState(true)\n\n  const manejarFormulario = (event) => {\n    //creamos una funcion que devuelva el valor de setInputText\n\n    setInputText(event.target.value) //target retorna el .valor de setInput\n  }\n\n  const submit = (event) => {\n    //previene el recargo de la pagina\n    event.preventDefault()\n    if (inputText.trim() !== \"\") {\n      props.nuevaTarea(inputText) //nuevaTarea la exportamos a App.js(copia) = a inputText\n      setInputText(\"\") //quiero que se borre lo escrito(volvemos al valor orginal de setInputText)\n      setValidacion(true)\n    } else {\n      setValidacion(false)\n    }\n  }\n\n  return (\n    <div>\n      <form className=\"form\" onSubmit={submit}>\n        <span className=\"texto-span\">Añadir tarea</span>\n        <input value={inputText} className=\"input-agregar\" onChange={manejarFormulario} />\n        <button>Añadir</button>\n      </form>\n      {!validacion && (\n        <div className=\"validacion\">Añada una tarea, por favor</div>\n      )}\n    </div>\n  )\n}\nexport default TareaForm\n","import React, { useState } from \"react\"\nimport \"./tareas.css\"\n\nconst Tarea = (props) => {\n  const [modoEdit, setModoEdit] = useState(false) //funcion que usaremos para editar\n  const [editText, setEditText] = useState(\"\") //fun que usaremos para editar el texto escrito\n\n  const edita = () => {\n    setModoEdit(true)\n    //damos valor inicial serModoEdit(true) para luego llamarlo\n  }\n\n  const manejarEdit = (event) => {\n    setEditText(event.target.value) //target retorna el .valor de setEditText\n  }\n\n  const submitEdit = (event) => {\n    //no recargar pagina\n    event.preventDefault()\n    props.editar(props.id, editText) //editame el texto que tenga un id\n    setEditText(\"\")\n    setModoEdit(false) //debe ser falsa para que cierre el input\n  }\n\n  const borrarTarea = () => {\n    //lo enlazamos con el props, para luego llamarlo al onClick={borrarTarea}\n    props.borrar(props.id)\n  }\n\n  const comple = () => {\n    //lo enlazamos con el props, para luego llamarlo al onClick={borrarTarea}\n    props.completado(props.id)\n  }\n\n  return (\n    <div>\n      {!modoEdit ? (\n        <div className=\"tarea\">\n          <span>{props.tarea}</span>\n          {/*{props.echo ?<button onClick={edita} className=\"button\">Editar</button> : null}*/}\n          {props.echo ? (\n            <button onClick={edita} className=\"button\">\n              Editar\n            </button>\n          ) : null}\n          {props.echo ? (\n            <button onClick={borrarTarea} className=\"button\">\n              Borrar\n            </button>\n          ) : null}\n          {props.echo ? (\n            <button onClick={comple} className=\"button\">\n              Completado\n            </button>\n          ) : null}\n        </div>\n      ) : (\n        <form className=\"formEdit\" onSubmit={submitEdit}>\n          <input value={editText} className=\"input-agregar\" onChange={manejarEdit} />{\" \"}\n          <button className=\"guardado\">Guardar</button>\n        </form>\n      )}\n    </div>\n  )\n}\n\nexport default Tarea\n","import React, { useState } from \"react\"\nimport TareaForm from \"./componentes/tareas/TareaForm\"\nimport Tarea from \"./componentes/tareas/Tarea\"\nimport \"./componentes/tareas/tareas.css\"\n\nfunction Llamados() {\n  const [listaTareas, setListaTareas] = useState([])\n\n  const [nuevoArray, setNuevoArray] = useState([])\n\n  const nuevaTarea = (tarea) => {\n    //importamos de TareaForm\n    setListaTareas([tarea, ...listaTareas]) //agregale todos los datos que escribamos en tarea y agregalos a los que ya tenia listaTareas\n  }\n\n  const borrar = (id) => {\n    const listaFiltrada = listaTareas.filter((e, index) => index !== id) //es para que muestre todo menos el id que precionamos\n    setListaTareas(listaFiltrada) //estamos igualando setListaTareas = listaFiltrada para actualizar el useState\n  }\n\n  const actualizarTarea = (id, tarea) => {\n    const listaActualizada = listaTareas.map((e, index) => {\n      //filtrar cuando se edita un elemento\n      if (index === id) {\n        e = tarea\n        console.log(e) //mostramos en consola lo que editamos\n      }\n\n      return e\n    })\n\n    setListaTareas(listaActualizada)\n  }\n\n  const completado = (check) => {\n    const accionTerminada = listaTareas[check]\n    setNuevoArray([accionTerminada, ...nuevoArray])\n\n    const listaIncompleta = listaTareas.filter(\n      (tarea, indice) => indice !== check\n    ) //probando\n    setListaTareas(listaIncompleta)\n\n  }\n\n  console.log(nuevoArray)\n\n  return (\n    <div className=\"Llamados\">\n      <TareaForm nuevaTarea={nuevaTarea} />{\" \"}\n      {/*retorname setListaTareas(nuevaTarea), es el (input)*/}\n      <div className=\"lista\">\n        {listaTareas.map((e, index) => (\n          <Tarea\n            tarea={e}\n            borrar={borrar}\n            completado={completado}\n            id={index}\n            editar={actualizarTarea}\n            echo={true}\n          />\n        ))}\n      </div>\n      <div className=\"nuevoArray\">\n        <h3 className=\"tareaH3\">Tareas completadas</h3>\n\n        {nuevoArray.map((e, index) => (\n          <Tarea\n            tarea={e}\n            borrar={borrar}\n            completado={completado}\n            id={index}\n            editar={actualizarTarea}\n            echo={false}\n          />\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default Llamados\n","import React from \"react\"\r\nimport { Outlet, Navigate } from \"react-router-dom\"\r\n\r\nconst PrivateRoutes = (props) => {\r\n  let auth = props.Logeado\r\n  return auth ? <Outlet /> : <Navigate to=\"/NoLogin\" />\r\n}\r\n\r\nexport default PrivateRoutes\r\n","import React from \"react\"\nimport \"./contacto.css\"\n\nexport default function Contacto() {\n  return (\n    <>\n      <div className=\"formulario-contact\">\n        <h1 className=\"titulo-form\"> Formulario de contacto</h1>\n        <form className=\"form-contact\">\n          <label className=\"form-label\"> Nombre</label>\n          <input type=\"text\" name=\"name\" className=\"input-form\"  placeholder=\"Nombre\" required/>\n          <label className=\"form-label\">Email</label>\n          <input type=\"email\" name=\"name\" className=\"input-form\" placeholder=\"Email\" required/>\n          <label className=\"form-label\">Asunto</label>\n          <input type=\"text\" name=\"name\" className=\"input-form\"  placeholder=\"Asunto\" required/>\n          <label className=\"form-label\">Mensaje</label>\n          <input type=\"text\" name=\"name\" className=\"input-form\" placeholder=\"Mensaje\" required/>\n          <input\n            type=\"submit\"\n            value=\"Enviar tu contacto\"\n            className=\"btn-input\"\n          />\n        </form>\n      </div>\n    </>\n  )\n}\n","import React, { useState } from \"react\"\r\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\"\r\nimport NoLogin from \"../page/auth/notas-no-login\"\r\nimport Header from \"../componentes/header/header\"\r\nimport Login from \"../page/auth/login\"\r\nimport Footer from \"../componentes/footer/footer\"\r\nimport Home from \"../page/home/home\"\r\nimport App from \"../App\"\r\nimport PrivateRoutes from \"./PrivateRoutes\"\r\nimport Contacto from \"../page/contacto/contacto\"\r\n\r\nexport default function Rutas() {\r\n  const [isLogged, setIsLogged] = useState(false)\r\n\r\n  return (\r\n    <>\r\n      <Router>\r\n        <Header />\r\n        <Routes>\r\n          <Route path=\"/prueba\" element={<App />} />\r\n          <Route path=\"/\" element={<Home />} />\r\n          <Route element={<PrivateRoutes Logeado={isLogged} />}>\r\n            <Route path=\"/tareas\" element={<App />} />\r\n          </Route>\r\n          <Route path=\"/contacto\" element={<Contacto />} />\r\n          <Route path=\"/login\" element={<Login onLogin={setIsLogged} />} />\r\n          <Route path=\"/noLogin\" element={<NoLogin />} />\r\n        </Routes>\r\n        <Footer />\r\n      </Router>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport Rutas from './utils/router';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Rutas />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}